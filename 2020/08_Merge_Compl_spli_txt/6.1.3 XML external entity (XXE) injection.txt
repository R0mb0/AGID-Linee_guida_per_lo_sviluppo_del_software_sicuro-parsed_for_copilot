 
 
Linee guida per lo sviluppo sicuro Pag. 25  a 156  
 
pratica nel caso di file locali. Nel caso dei remot e files non vi è altra soluzione che verificare il contenuto o 
l’hash del file prima di adoperarlo in qualsiasi mo do. 
6.1.3  XML external entity (XXE) injection 
L' XML external entity injection, o iniezione di en tità esterne XML, nota anche come XXE, è una vulner abilità 
della sicurezza che consente a un attaccante di man ipolare l'elaborazione di dati XML da parte di 
un'applicazione web. L’attaccante può essere in gra do di accedere al file system dell’application serv er e di 
interagire con qualsiasi sistema esterno a cui l'ap plicazione stessa è autorizzata ad accedere. In alc une 
situazioni, può portare alle estreme conseguenze l’ attacco, fino a compromettere il server sottostante  o 
altre infrastrutture di back-end, sfruttando la vul nerabilità XXE e falsificando delle richieste sul l ato server 
(SSRF). 
Alcune applicazioni utilizzano il formato XML per t rasmettere dati tra il browser e il server. Le appl icazioni 
che lo fanno praticamente utilizzano sempre una lib reria standard o un'API della piattaforma per elabo rare 
i dati XML sul server. Le vulnerabilità di XXE sorg ono perché la specifica XML contiene varie funziona lità 
potenzialmente pericolose e i parser standard suppo rtano queste funzionalità, anche se non vengono 
normalmente utilizzate dall'applicazione. 
Le entità esterne XML sono un tipo di entità XML pe rsonalizzata i cui valori definiti vengono caricati  
dall'esterno del DTD in cui sono dichiarati. Le ent ità esterne sono particolarmente interessanti dal p unto di 
vista della sicurezza perché consentono di definire  un'entità in base al contenuto di un percorso di f ile o 
URL. 
Le entità XML sono un modo per rappresentare un ele mento di dati all'interno di un documento XML, 
anziché utilizzare i dati stessi. Varie entità sono  integrate nelle specifiche del linguaggio XML. Per  esempio, 
le entità &lt; e &gt; rappresetano i metacaratteri ‘<’ e ‘>’. Poiché sono usati per indicare i tag XML , devono 
generalmente essere rappresentati usando le loro en tità quando compaiono all'interno dei dati. 
L’XML consente di indicare delle entità personalizz ate all’interno del loro DTD di riferimento, come 
nell’esempio seguente:  
 
<!DOCTYPE foo [ <!ENTITY entitaPersonalizzata "enti tà personalizzazta per usi 
interni" > ]> 
 
Questa definizione significa che qualsiasi utilizzo  dell'entità &entitaPersonalizzata; all'interno del  
documento XML verrà sostituito con il valore defini to: "entità personalizzazta per usi interni". 
Se un utente ha la possibilità di intodurre un’enti tà che si riferisca a una risorse esterna, il parse r XML 
riporterà all’interno dell’applicazione qualsiasi c ontenuto. Un malintenzionato può così introdurre e far 
eseguire codice malevolo. 
Ad esempio può essere referenziato un percorso URL,  che può puntare a un file del sistema operativo 
(tramite il protocollo file://) o esterno (tramite il protocollo http://). 
 
Esempio:  
Entità esterna che espone a vulnerabilità l’applica zione: 
 
<!DOCTYPE foo [ <!ENTITY ext SYSTEM "file:///path/t o/file" > ]> 
 
Se si indica il file  /etc/passwd , se ne ottiene l’automatica lettura e inclusione n el documento.  
 
Contromisure 
Tutte le vulnerabilità XXE sorgono perché la librer ia di parsing dell’XML utilizzata dall'applicazione  supporta 
funzionalità XML potenzialmente pericolose. Il modo  più semplice ed efficace per prevenire gli attacch i XXE 
è disabilitare tali funzionalità. 
 
