  
 
 
LINEE GUIDA PER L’ADOZIONE DI UN CICLO DI SVILUPPO DI 
SOFTWARE SICURO Pag. 14  a 137  
 
 
Figura 4 - OWASP Top 10 - 2017 
L’adozione di un Secure Software Development Life C ycle (SSDLC) atto a considerare e implementare 
opportune attività di sicurezza, nel corso di tutte  le sue fasi del ciclo di vita del SW (dall’analisi  fino alla 
manutenzione), è una necessità inderogabile per ris pondere in modo efficace alle problematiche di 
sicurezza e per ridurre i costi che comportano tras curarla. 
Ripensare alla sicurezza tra responsabilità e consa pevolezza, oltre ad essere una buona pratica, è anc he un 
obbligo di legge (Regolamento UE 679/2016).  
 
4.3  Security Tools 
Nell’ambito della cybersecurity, Forrester 8, nel suo report “ Five steps to reinforce and harden application 
security ”9, rileva la necessità di cooperazione tra i team Se curity & Risk (S&R) e gli IT manager (I&O), 
ribadendo più volte come i primi non siano in grado , da soli, di coprire tutte le vulnerabilità scatur ite dalle 
nuove esigenze in ambiti IT e digital business. Dal  punto di vista dell’analista, infatti, l’IT team d eve 
adottare, attraverso opportuni meccanismi di automa zione e integrazione, le security practices  all’interno 
di una ‘ continuous delivery pipeline ’. Questo garantisce una maggiore visibilità nelle interazioni tra 
hardware, software, servizi web e customer data. I professionisti I&O hanno, quindi, l’obiettivo di cr eare un 
ambiente di sicurezza ‘responsive’.  
A tal fine, Forrester propone cinque steps per cost ruire un responsive security environment : 
 
 
Innanzitutto è necessario eliminare tutte le proble matiche di sicurezza spesso derivanti da vulnerabil ità 
riconducibili a servizi non più utilizzati e non pi ù mantenuti o una cattiva gestione degli accessi e delle 
autorizzazioni. Tale attività deve essere svolta at traverso la collaborazione tra i team dedicati (I&O  e S&R). 
                                                           
8 https://www.forrester.com/  
9 https://www.forrester.com/report/Five+Steps+To+Rein force+And+Harden+Application+Security/-/E-RES127875  
Step 1 : rimuovere le ‘inconsistenze’ e creare un ‘conto’ dei materiali  
  
 
 
LINEE GUIDA PER L’ADOZIONE DI UN CICLO DI SVILUPPO DI 
SOFTWARE SICURO Pag. 15  a 137  
 
In aggiunta, il censimento delle componenti applica tive (attraverso un approccio ‘application modeling ’) 
consente di ottenere ulteriori benefici in termini di: riduzione del mean-time-to-repair (attraverso l ’impiego 
di strumenti di gestione della configurazione a sos tegno del processo di monitoraggio delle modifiche 
applicative e dell’infrastruttura a supporto); util izzo limitato di software per l’analisi delle vulne rabilità di 
terze parti (la visione completa dell’applicazione e di come interagisce con gli altri sistemi esisten ti 
consente di limitare l’uso di ulteriori strumenti);  rapida rimozione dei ‘difetti’ che possono generar e 
vulnerabilità. 
 
 
Generalmente l’accesso intenzionale, non autorizzat o, ai dati presenti all’interno della propria 
organizzazione, consegue, essenzialmente, da vulner abilità derivanti da un hardening non adeguato, da 
problematiche di sicurezza nel software/hardware e/ o da una cattiva progettazione del sistema stesso. E’ 
necessario lavorare a livello infrastrutturale per bloccare tutti gli accessi non autorizzati monitora ndo 
costantemente network e traffico sui sistemi. I tea m di gestione dell’infrastruttura e quelli della si curezza 
dovrebbero cooperare nel processo di identificazion e delle policy e dei tool per il monitoraggio, dell e 
applicazioni in particolare, per verificare in temp o reale eventuali cambiamenti prima che questi si 
traducano in vulnerabilità.  
 
 
E’ richiesto l’impiego di sistemi infrastrutturali e tool tecnologici a supporto delle politiche di si curezza. 
Questi svolgono un ruolo determinante nella prevenz ione (e nella risposta) delle intrusioni in quanto,  a 
fronte di anomalie (legate ad esempio all’utilizzo delle Cpu o al numero delle transazioni di sistema) , 
avendo il controllo di tutto lo stack tecnologico, riescono a fornire in tempo utile alert e informazi oni al 
team di sicurezza. Un sistema di controllo di quest o tipo accelera il mean-time-to-detection (il tempo  di 
localizzazione di una vulnerabilità o di un attacco ) e il tempo di risposta. Inoltre, cosa molto impor tante, 
riduce il range dei falsi allarmi di sicurezza (gra zie ai controlli incrociati tra i team di infrastru ttura e i team 
della sicurezza). 
 
E’ estremamente importante l’attività di tracciamen to e di monitoraggio in tutte le fasi del ciclo di vita di 
sviluppo dell’applicazione. L’obiettivo è di analiz zare tutte le fonti dati nonché il materiale di cia scuna 
applicazione, e monitorarne ogni minimo cambiamento . A tal fine, dal punto di vista tecnologico, Forre ster 
suggerisce:  
i)  l’integrazione degli Application Release Automation  tool nei processi di auditing; 
ii)  l’adozione di sistemi di Automate Change Tracking e  dashboard a supporto dai team di I&O e 
S&R. 
 
Gli step precedenti concorrono alla creazione di un  vero e proprio stack tecnologico incentrato sulla 
sicurezza applicativa. Al fine di indirizzare corre ttamente una protezione efficace delle applicazioni , è di Step 2 : limitare e rinforzare l’accesso ai sistemi e ai n etwork device , monitorare i cambiamenti  
Step 3 : assistere i team di Security&Risk sul fronte intrusion detectio n  & response  
Step 4 : ‘loggare’ quanto più possibile  
Step 5 : creare uno stack di application security tool  
